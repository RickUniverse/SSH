<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
    "-//Hibernate/Hibernate Configuration DTD//EN"
    "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
  <session-factory>

<!--    <property name="hibernate.connection.provider_class">org.hibernate.c3p0.internal.C3P0ConnectionProvider</property>-->
<!--    &lt;!&ndash;设置c3p0数据连接池&ndash;&gt;-->
<!--    &lt;!&ndash;数据库连接池的最大连接数&ndash;&gt;-->
<!--    <property name="hibernate.c3p0.max_size">10</property>-->
<!--    &lt;!&ndash;数据库连接池的最小连接数&ndash;&gt;-->
<!--    <property name="hibernate.c3p0.min_size">5</property>-->
<!--    &lt;!&ndash;当连接池中的链接耗尽时，同一时刻获取多少个数据库连接&ndash;&gt;-->
<!--    <property name="hibernate.c3p0.acquire_increment">2</property>-->

<!--    &lt;!&ndash;数据库连接池中的连接对象在多长时间没有使用后会被销户&ndash;&gt;-->
<!--    <property name="hibernate.c3p0.timeout">2000</property>-->
<!--    &lt;!&ndash;表示连接池检测线程多长时间检测一次池中的所有连接对象是否超时-->
<!--    连接池本身不会把自己从连接池中移除，而是由专门的一个线程按照一定的时间间隔来做这件事-->
<!--    这个链接通过比较连接对象最后一次 被使用时间和当前时间的时间差和timeout来做比较，进而决定是否销毁这个对象&ndash;&gt;-->
<!--    <property name="hibernate.c3p0.idle_test_period">2000</property>-->

<!--    &lt;!&ndash;缓存Statement的数量&ndash;&gt;-->
<!--    <property name="hibernate.c3p0.max_statements">100</property>-->





    <!--配置连接数据库的基本信息-->
      <!--MySQL
    <property name="connection.url">jdbc:mysql://localhost:3306/hibernate5</property>
    <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
    <property name="hibernate.connection.username">root</property>
    <property name="hibernate.connection.password">root</property>
    -->
      <!--oracle-->
<!--      <property name="hibernate.connection.username">myoracle2</property>-->
<!--      <property name="hibernate.connection.password">myoracle2</property>-->
<!--      <property name="connection.url">jdbc:oracle:thin:@localhost:1521:orcl</property>-->
<!--      <property name="connection.driver_class">oracle.jdbc.driver.OracleDriver</property>-->

      <!--配置hibernate的基本信息-->
    <!--hibernate所使用的数据库方言-->
<!--    <property name="dialect">org.hibernate.dialect.MySQLInnoDBDialect</property>-->
      <!--无法创建表使用org.hibernate.dialect.MySQL5Dialect 方言-->
<!--    <property name="dialect">org.hibernate.dialect.MySQL5Dialect</property>-->
      <!--如果外键无法创建成功，则需要使用该 方言-->
<!--    <property name="dialect">org.hibernate.dialect.MySQL57InnoDBDialect</property>-->
<!--      <property name="dialect">org.hibernate.dialect.MySQL5InnoDBDialect</property>-->
      <!--oracle 方言-->
      <property name="dialect">org.hibernate.dialect.Oracle12cDialect</property>

    <!--执行操作时是否在控制台打印sql-->
    <property name="show_sql">true</property>
    <!--是否对sql进行格式化-->
    <property name="format_sql">true</property>
    <!--是否自动生成数据库表的策略-->
    <property name="hibernate.hbm2ddl.auto">update</property>

    <!--修改数据库的事务隔离级别-->
    <property name="connection.isolation">2</property>

    <!--删除对象后将其oid值置空null-->
    <property name="hibernate.use_identifier_rollback">true</property>

      <!--设定JDBC的statement 读取数据的时候每次从数据库中取出的记录条数-->
      <property name="hibernate.jdbc.fetch_size">100</property>
      <!--设定对数据库进行批量删除，批量更新和批量插入时候的批次大小-->
      <property name="jdbc.batch_size">30</property>

      <!--启用二级缓存-->
    <!-- 配置二级缓存 ehCache  -->
    <property name="hibernate.cache.use_second_level_cache">true</property>

    <!-- 配置二级缓存技术提供者 -->
    <property name="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.internal.EhcacheRegionFactory</property>

    <!--查询缓存-->
    <property name="hibernate.cache.use_query_cache">true</property>

    <!--设置管理session的方式-->
    <property name="current_session_context_class">thread</property>





      <!--配置那个类使用二级缓存，，，，不管用。-->
<!--    <class-cache usage="read-write" class="com.hibernate.hql.Employee"/>-->
<!--    <class-cache usage="read-write" class="com.hibernate.hql.Department"/>-->
    <!--集合级别的二级缓存-->
<!--    <collection-cache collection="com.hibernate.hql.Department.emps" usage="read-write"/>-->
  </session-factory>
</hibernate-configuration>